Hands-On Bash Script Example: Loops (While, Until) for Reading Syslog. 

Bash scripting is a powerful way to automate tasks on Linux systems. In this hands-on guide, I explore two types of loops in Bash, while and until, by using them to read the contents of the /var/log/syslog file line by line.

Here are the key elements used in the script.

ğŸ”¶ Loop: A programming structure that repeats a set of commands automatically,

ğŸ”¶While Loop: Runs while a condition is true 

ğŸ”¶ Until Loop: Runs until a condition becomes true

ğŸ”¶ Echo: Print message or variables to the terminal

ğŸ”¶ Shebang (#!/bin/bash): Interpret in bash shell

ğŸ”¶ x=1: Used to keep track of line numbers as you read each line of the syslog file

ğŸ”¶ Sleep 2: Delay for 2 seconds

ğŸ”¶ While read -r line: This starts the loop

ğŸ”¶ read -r line: Read one line at a time from the file or input

ğŸ”¶ -r: Avoids interpreting backslashes

ğŸ”¶ Do: Marks the starting of the loop's body

ğŸ”¶ "Line $x: $line;: Prints the line number ($x) and the actual content of the line ($line)

ğŸ”¶ (( x++ )): It increases the variable x by 1 (e.g., print each line as Line 1, Line 2, Line 3 etc.)

ğŸ”¶ done </var/log/syslog: This redirects the contents of /var/log/syslog into the while loop

ğŸ”¶ tail -n 5: Displays the last 5 lines of the specified file.

Here is the walkthrough video link:
https://www.youtube.com/watch?v=F6Lgg67SJ7s